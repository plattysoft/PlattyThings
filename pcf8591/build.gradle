apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'maven-publish'
apply plugin: 'com.jfrog.bintray'

def versionName = '0.8.1'

android {
    compileSdkVersion 26
    buildToolsVersion "26.0.2"

    defaultConfig {
        minSdkVersion 24
        targetSdkVersion 26
        versionCode 1

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

def siteUrl = 'https://github.com/plattysoft/PlattyThings/tree/master/pcf8591'
def gitUrl = 'https://github.com/plattysoft/PlattyThings.git'
def artifact = "pcf8591"
group = "com.plattysoft.things"
version = versionName

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })

    compileOnly 'com.google.android.things:androidthings:+'

    testCompile 'junit:junit:4.12'
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
}


Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())

bintray {
    user = properties.getProperty("bintray.user")
    key = properties.getProperty("bintray.apikey")

    publications = ['Production']
    configurations = ['archives']
    pkg {
        repo = "PlattyThings"
        name = artifact
        websiteUrl = siteUrl
        vcsUrl = gitUrl
        licenses = ["Apache-2.0"]
        dryRun = false
        publish = true
        version {
            name = versionName //Bintray logical version name
            vcsTag = versionName
        }
    }
}

publishing {
    publications {
        Production(MavenPublication) {

//            artifact("$buildDir/outputs/aar/app-release.aar")
            artifactId artifact
            version = versionName
            groupId = group

            pom.withXml {
                // Iterate over the implementation dependencies (we don't want the test ones), adding a <dependency> node for each
                configurations.implementation.allDependencies.each {
                    // Ensure dependencies such as fileTree are not included.
                    if (it.name != 'unspecified') {
                        def dependencyNode = dependenciesNode.appendNode('dependency')
                        dependencyNode.appendNode('groupId', it.group)
                        dependencyNode.appendNode('artifactId', it.name)
                        dependencyNode.appendNode('version', it.version)
                    }
                }
            }
        }
    }
}

//install {
//    repositories.mavenInstaller {
//        // This generates POM.xml with proper parameters
//        pom {
//            project {
//                packaging 'aar'
//                artifactId artifact
//                version = versionName
//                groupId = group
//                // Add your description here
//                name artifact
//                description = 'ADC PCF8591 driver for Android Things'
//                url siteUrl
//
//                // Set your license
//                licenses {
//                    license {
//                        name 'The Apache Software License, Version 2.0'
//                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
//                    }
//                }
//                developers {
//                    developer {
//                        id 'plattysoft'
//                        name 'Platty Soft'
//                        email 'raul@plattysoft.com'
//                    }
//                }
//                scm {
//                    connection gitUrl
//                    developerConnection gitUrl
//                    url siteUrl
//                }
//            }
//        }
//    }
//}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
    archiveName "pcf8591-${versionName}-sources.jar"
}

//apply plugin: 'maven'
//
//task createPom {
//    pom {
//        project {
//            groupId group
//            version android.defaultConfig.versionName
//            artifactId artifact
//            packaging 'aar'
//        }
//    }
//    .withXml {
//        def dependenciesNode = asNode().appendNode('dependencies')
//
//        //Iterate over the compile dependencies (we don't want the test ones), adding a <dependency> node for each
//        configurations.api.allDependencies.each {
//            def dependencyNode = dependenciesNode.appendNode('dependency')
//            // If the dependency is the SDK, link it to the current build number
//            dependencyNode.appendNode('artifactId', it.name)
//            if (it.name == "seniorlivingsdk") {
//                dependencyNode.appendNode('groupId', libraryGroupId)
//                dependencyNode.appendNode('version', sdkVersion)
//            } else {
//                dependencyNode.appendNode('groupId', it.group)
//                dependencyNode.appendNode('version', it.version)
//            }
//        }
//    }.writeTo("$buildDir/outputs/pom.xml")
//}


artifacts {
    archives sourcesJar
}

repositories {
    mavenCentral()
}